# Generated by Django 5.1.2 on 2024-12-04 14:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import myapp.models
import myapp.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceImei',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(max_length=15, unique=True, validators=[myapp.models.validate_imei], verbose_name='IMEI raqami')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=150, verbose_name='Kategoriya')),
                ('device_count', models.IntegerField(verbose_name='Qurilma soni')),
                ('lost_device_count', models.IntegerField(verbose_name="Yo'qolgan qurilmalar soni")),
            ],
            options={
                'verbose_name': 'Qurilma statistikasi',
                'verbose_name_plural': 'Qurilma statistikasi',
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Quqilma turi')),
            ],
            options={
                'verbose_name': 'Qurilma Turi',
                'verbose_name_plural': 'Qurilma Turi',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Viloyatlar')),
            ],
            options={
                'verbose_name': 'Viloyat nomi',
                'verbose_name_plural': 'Viloyat nomi',
            },
        ),
        migrations.CreateModel(
            name='UsersNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Sarlovha')),
                ('body', models.TextField(verbose_name='tana qismi')),
                ('photo', models.ImageField(upload_to='media/photo')),
                ('links', models.CharField(blank=True, max_length=100, verbose_name='link')),
            ],
            options={
                'verbose_name': 'Userlar uchun',
                'verbose_name_plural': 'Userlar uchun',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=13, validators=[myapp.models.validate_phone_number], verbose_name='Telefon raqami')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FoundDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_started', models.DateField(verbose_name='Birinchi faollik')),
                ('active_finished', models.DateField(verbose_name="So'ngi faollik")),
                ('operator', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=13, validators=[myapp.models.validate_phone_number], verbose_name='Telefon raqami')),
                ('is_viewed', models.BooleanField(default=False)),
                ('imei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.deviceimei')),
            ],
            options={
                'verbose_name': 'Topilgan qurilma',
                'verbose_name_plural': 'Topilgan qurilmalar',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Tuman nomi')),
                ('categoryRegion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='district', to='myapp.region', verbose_name='Viloyat')),
            ],
            options={
                'verbose_name': 'Tuman nomi',
                'verbose_name_plural': 'Tuman nomi',
                'unique_together': {('categoryRegion', 'title')},
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='ism')),
                ('device_name', models.CharField(max_length=100, verbose_name='qurilma nomi')),
                ('data', models.DateTimeField(verbose_name="Yo'qolgan Vaqti")),
                ('phone_number', models.CharField(max_length=13, validators=[myapp.models.validate_phone_number], verbose_name='Telefon raqami')),
                ('file', models.FileField(help_text='Fayl hajmi 5 MB dan oshmasligi va kengaytmasi .pdf boâ€˜lishi kerak.', upload_to='Media/', validators=[myapp.validators.validate_file_size, myapp.validators.validate_file_extension], verbose_name='ariza yuborish')),
                ('categoryDistrict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.district', verbose_name='Tuman')),
                ('categoryRegion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.region', verbose_name='Viloyat')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.devicetype', verbose_name='qurilma turi')),
            ],
            options={
                'verbose_name': 'Qurilama nomi',
                'verbose_name_plural': 'Qurilama nomi',
            },
        ),
        migrations.AddField(
            model_name='deviceimei',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imeis', to='myapp.userdevice'),
        ),
    ]
